{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agnibharay/Developer/connecto/app/%28admin%29/admin/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { db } from '@/lib/firebase/config';\nimport { collection, query, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { UserProfile } from '@/types';\nimport Image from 'next/image';\nimport toast from 'react-hot-toast';\n\nexport default function AdminPage() {\n  const [users, setUsers] = useState<UserProfile[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const usersRef = collection(db, 'users');\n        const q = query(usersRef);\n        const querySnapshot = await getDocs(q);\n        \n        const usersList = querySnapshot.docs.map(doc => {\n          const data = doc.data();\n          // Ensure isVerified and isAdmin fields exist with default values\n          return {\n            ...data,\n            uid: doc.id,\n            isVerified: data.isVerified ?? false,\n            isAdmin: data.isAdmin ?? false\n          };\n        }) as UserProfile[];\n        \n        setUsers(usersList);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        toast.error('Failed to load users');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const toggleUserStatus = async (user: UserProfile, field: 'isVerified' | 'isAdmin') => {\n    try {\n      const userRef = doc(db, 'users', user.uid);\n      await updateDoc(userRef, {\n        [field]: !user[field],\n        updatedAt: new Date()\n      });\n\n      // Update local state\n      setUsers(prevUsers => \n        prevUsers.map(u => \n          u.uid === user.uid \n            ? { ...u, [field]: !u[field] }\n            : u\n        )\n      );\n\n      toast.success(`User ${field === 'isAdmin' ? 'admin status' : 'verification status'} updated`);\n    } catch (error) {\n      console.error('Error updating user:', error);\n      toast.error('Failed to update user status');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <p className=\"text-center text-gray-600\">Loading users...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n      <div className=\"px-4 py-5 sm:px-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-gray-900\">User Management</h3>\n        <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Manage user verification and admin status</p>\n      </div>\n      <div className=\"border-t border-gray-200\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  User\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Email\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Username\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {users.map((user) => (\n                <tr key={user.uid}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"h-10 w-10 relative rounded-full overflow-hidden\">\n                        <Image\n                          src={user.photoURL || '/images/default-avatar.png'}\n                          alt={user.displayName}\n                          fill\n                          sizes=\"40px\"\n                          className=\"object-cover\"\n                        />\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">{user.displayName}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{user.email}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">@{user.username}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex gap-2\">\n                      {user.isVerified && (\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                          Verified\n                        </span>\n                      )}\n                      {user.isAdmin && (\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                          Admin\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => toggleUserStatus(user, 'isVerified')}\n                        className=\"text-indigo-600 hover:text-indigo-900\"\n                      >\n                        {user.isVerified ? 'Unverify' : 'Verify'}\n                      </button>\n                      <button\n                        onClick={() => toggleUserStatus(user, 'isAdmin')}\n                        className=\"text-indigo-600 hover:text-indigo-900 ml-4\"\n                      >\n                        {user.isAdmin ? 'Remove Admin' : 'Make Admin'}\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;;;AAPA;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;kDAAa;oBACjB,IAAI;wBACF,MAAM,WAAW,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,4HAAA,CAAA,KAAE,EAAE;wBAChC,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE;wBAChB,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;wBAEpC,MAAM,YAAY,cAAc,IAAI,CAAC,GAAG;wEAAC,CAAA;gCACvC,MAAM,OAAO,IAAI,IAAI;gCACrB,iEAAiE;gCACjE,OAAO;oCACL,GAAG,IAAI;oCACP,KAAK,IAAI,EAAE;oCACX,YAAY,KAAK,UAAU,IAAI;oCAC/B,SAAS,KAAK,OAAO,IAAI;gCAC3B;4BACF;;wBAEA,SAAS;oBACX,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,yBAAyB;wBACvC,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;oBACd,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;8BAAG,EAAE;IAEL,MAAM,mBAAmB,OAAO,MAAmB;QACjD,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,4HAAA,CAAA,KAAE,EAAE,SAAS,KAAK,GAAG;YACzC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM;gBACrB,WAAW,IAAI;YACjB;YAEA,qBAAqB;YACrB,SAAS,CAAA,YACP,UAAU,GAAG,CAAC,CAAA,IACZ,EAAE,GAAG,KAAK,KAAK,GAAG,GACd;wBAAE,GAAG,CAAC;wBAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM;oBAAC,IAC3B;YAIR,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,UAAU,YAAY,iBAAiB,sBAAsB,QAAQ,CAAC;QAC9F,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;0BAA4B;;;;;;;;;;;IAG/C;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA8C;;;;;;kCAC5D,6LAAC;wBAAE,WAAU;kCAAuC;;;;;;;;;;;;0BAEtD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,WAAU;0CACf,cAAA,6LAAC;;sDACC,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;;;;;;;;;;;;0CAK/G,6LAAC;gCAAM,WAAU;0CACd,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gEACJ,KAAK,KAAK,QAAQ,IAAI;gEACtB,KAAK,KAAK,WAAW;gEACrB,IAAI;gEACJ,OAAM;gEACN,WAAU;;;;;;;;;;;sEAGd,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC;gEAAI,WAAU;0EAAqC,KAAK,WAAW;;;;;;;;;;;;;;;;;;;;;;0DAI1E,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;8DAAyB,KAAK,KAAK;;;;;;;;;;;0DAEpD,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;wDAAwB;wDAAE,KAAK,QAAQ;;;;;;;;;;;;0DAExD,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;wDACZ,KAAK,UAAU,kBACd,6LAAC;4DAAK,WAAU;sEAA4F;;;;;;wDAI7G,KAAK,OAAO,kBACX,6LAAC;4DAAK,WAAU;sEAA0F;;;;;;;;;;;;;;;;;0DAMhH,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DACC,SAAS,IAAM,iBAAiB,MAAM;4DACtC,WAAU;sEAET,KAAK,UAAU,GAAG,aAAa;;;;;;sEAElC,6LAAC;4DACC,SAAS,IAAM,iBAAiB,MAAM;4DACtC,WAAU;sEAET,KAAK,OAAO,GAAG,iBAAiB;;;;;;;;;;;;;;;;;;uCAjDhC,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DjC;GA7JwB;KAAA","debugId":null}}]
}