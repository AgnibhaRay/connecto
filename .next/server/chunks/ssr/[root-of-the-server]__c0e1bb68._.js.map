{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/agnibharay/Developer/connecto/lib/firebase/config.ts"],"sourcesContent":["import { initializeApp, getApp, getApps } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\nimport { getAnalytics } from 'firebase/analytics';\n\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase only if it hasn't been initialized already\nlet app;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApp();\n}\n\n// Initialize services\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst storage = getStorage(app);\n\n// Initialize Analytics only on client side\nlet analytics = null;\nif (typeof window !== 'undefined') {\n  analytics = getAnalytics(app);\n}\n\nexport { app, db, auth, storage, analytics };"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;AAGA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,iEAAiE;AACjE,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACb;AAEA,sBAAsB;AACtB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAE3B,2CAA2C;AAC3C,IAAI,YAAY;AAChB,uCAAmC;;AAEnC","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///Users/agnibharay/Developer/connecto/components/auth/AuthProvider.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect } from 'react';\nimport { auth } from '@/lib/firebase/config';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { User } from 'firebase/auth';\nimport toast from 'react-hot-toast';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType>({ user: null, loading: true });\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, loading, error] = useAuthState(auth);\n  const router = useRouter();\n  const pathname = usePathname();\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Authentication error: ' + error.message);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (!loading) {\n      // If not authenticated and trying to access protected routes\n      if (!user && !pathname.startsWith('/auth')) {\n        router.push('/auth');\n      }\n      // If authenticated and trying to access auth pages\n      if (user && pathname.startsWith('/auth')) {\n        router.push('/feed');\n      }\n    }\n  }, [user, loading, pathname, router]);\n\n  return (\n    <AuthContext.Provider value={{ user: user || null, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AAcA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IAAE,MAAM;IAAM,SAAS;AAAK;AAExE,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AAEzB,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC9E,MAAM,CAAC,MAAM,SAAS,MAAM,GAAG,CAAA,GAAA,0KAAA,CAAA,eAAY,AAAD,EAAE,yHAAA,CAAA,OAAI;IAChD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO;YACT,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,2BAA2B,MAAM,OAAO;QACtD;IACF,GAAG;QAAC;KAAM;IAEV,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,SAAS;YACZ,6DAA6D;YAC7D,IAAI,CAAC,QAAQ,CAAC,SAAS,UAAU,CAAC,UAAU;gBAC1C,OAAO,IAAI,CAAC;YACd;YACA,mDAAmD;YACnD,IAAI,QAAQ,SAAS,UAAU,CAAC,UAAU;gBACxC,OAAO,IAAI,CAAC;YACd;QACF;IACF,GAAG;QAAC;QAAM;QAAS;QAAU;KAAO;IAEpC,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE,MAAM,QAAQ;YAAM;QAAQ;kBACxD;;;;;;AAGP","debugId":null}}]
}